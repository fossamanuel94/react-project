{"version":3,"sources":["users/Login.js","navbar/NavBarList.js","navbar/Navbar.js","users/Registro.js","posts/CategorieSelect.js","posts/CreatePosts.js","posts/Post.js","posts/PostsList.js","comments/ComentsList.js","comments/AddComent.js","posts/SelectedPost.js","posts/CategoriePostList.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setUserState","useContext","userContext","history","useHistory","useState","user_email","user_pw","userLog","setUserLog","inputEmailStyle","setInputEmailStyle","inputPwStyle","setInputPwStyle","phEmail","setPhEmail","phPass","setPhPass","alertState","setAlertState","login","user","axios","post","handleSubmit","e","a","preventDefault","result","status","data","message","sessionStorage","setItem","JSON","stringify","tokens","name","type","getItem","push","className","onSubmit","placeholder","value","onChange","target","onFocus","href","listSB","id_categorie","categorie_name","Navbar","userState","setName","isAdmin","setIsAdmin","buttonState","setButtonState","useEffect","nameSession","typeSession","parse","onClick","to","id","map","categorie","removeItem","Registro","user_name","user_password","user_nickname","user_image","user_passwordConf","setUser","phName","setPhName","phNick","setPhNick","phImage","setPhImage","phPassConf","setPhPassCongf","nameStyle","setNameStyle","passStyle","setPassStyle","passConfStyle","setPassConfStyle","emailStyle","setEmailStyle","nickStyle","setNickStyle","imageStyle","setImageStyle","postUser","alert","method","url","handleBlurEmail","email","get","handleBlurNick","nick","onBlur","CategorieSelect","props","categories","setCategories","setCategorie","then","res","selectCateg","Posts","postDesc","postTitle","postSubtitle","postImage","postCateg","setPost","createPost","postSended","post_title","post_image","post_desc","post_categ","post_subtitle","headers","Authorization","token","parsedTokens","tokenA","tokenR","newToken","undefined","console","log","editor","ClassicEditor","getData","config","toolbar","Post","id_post","alt","src","substring","PostsList","posts","setPosts","ComentsList","comments","setComments","eachComment","id_comment","comment_date","comment","moment","format","AddComent","setComment","sendComment","authorization","commentSubmit","window","location","reload","disabled","SelectedPost","useParams","post_date","scrollTo","ReturnPost","htmlParser","CategoriePostList","createContext","App","Provider","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8a3422.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { userContext } from \"../App\";\nimport '../App.css'\n\nexport default function Login() {\n\n  const { setUserState } = useContext(userContext);\n  const history = useHistory();\n  const [userLog, setUserLog] = useState({\n    user_email: \"\",\n    user_pw: \"\",\n  });\n  const [inputEmailStyle, setInputEmailStyle] = useState(\"input-form\");\n  const [inputPwStyle, setInputPwStyle] = useState(\"input-form\");\n  const [phEmail, setPhEmail] = useState(\"Email\");\n  const [phPass, setPhPass] = useState(\"Password\");\n  const [alertState, setAlertState] = useState(true);\n\n  const login = (user) => {\n    return axios.post(\"https://manuelfossa-nodejs.herokuapp.com/users/login\", {\n      user_email: user.user_email,\n      user_pw: user.user_pw,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (userLog.user_email === \"\") {\n      setInputEmailStyle(\"input-form invalid\");\n      setPhEmail(\"Complete el campo\");\n    }\n    if (userLog.user_pw === \"\") {\n      setInputPwStyle(\"input-form invalid\");\n      setPhPass(\"Complete el campo\");\n    } else {\n      const user = {\n        user_email: userLog.user_email,\n        user_pw: userLog.user_pw,\n      };\n      const result = await login(user);\n      //console.log(result);\n      if (result.status !== 200) {\n        setAlertState(false);\n        if (result.data.message === \"Email inexistente\") {\n          //console.log(result.data.message);\n          setUserLog({\n            user_email: \"\",\n            user_pw: \"\",\n          });\n        } else {\n          //console.log(result.data.message);\n          setUserLog({ ...userLog, user_pw: \"\" });\n        }\n      } else {\n        //console.log(result.data);\n        //alert(\"Bienvenido \" + result.data.name);\n        sessionStorage.setItem(\"Tokens\", JSON.stringify(result.data.tokens));\n        sessionStorage.setItem(\"Name\", JSON.stringify(result.data.name));\n        sessionStorage.setItem(\"Type\", JSON.stringify(result.data.type));\n        setUserLog({\n          user_email: \"\",\n          user_pw: \"\",\n        });\n        setUserState(true);\n        const sessionTokens = sessionStorage.getItem(\"Tokens\");\n        //console.log(JSON.parse(sessionTokens));\n        history.push(\"/\");\n      }\n    }\n  };\n\n  return (\n    <form className=\"container-login\" onSubmit={handleSubmit}>\n      <p className=\"title-form\">Login</p>\n      {!alertState ? (\n          <div\n            className=\"alert-error\"\n          >Email o Contrasena incorrecto\n          </div>\n        ) : null}\n      <input \n        type=\"email\" \n        className={inputEmailStyle}\n        placeholder={phEmail}\n        value={userLog.user_email}\n        onChange={(e) =>\n          setUserLog({ ...userLog, user_email: e.target.value })\n        }\n        onFocus={() => setInputEmailStyle((\"input-form\"), setAlertState(true))}\n      />\n      <input \n        type=\"password\" \n        className={inputPwStyle} \n        placeholder={phPass}\n        value={userLog.user_pw}\n        onChange={(e) =>\n        setUserLog({ ...userLog, user_pw: e.target.value })\n        }\n        onFocus={() => setInputPwStyle((\"input-form\"),setAlertState(true))}\n      />\n      <button type=\"submit\" className=\"btn-form\">Login</button>\n      <a href=\"/sign-in\">No estas registrado? Click aca!</a>\n    </form>\n  );\n\n}\n","const listSB = [\n  {\n    id_categorie: 1,\n    categorie_name: \"Hardware\",\n  },\n  {\n    id_categorie: 2,\n    categorie_name: \"Software\",\n  },\n  {\n    id_categorie: 3,\n    categorie_name: \"Perifericos\",\n  },\n  {\n    id_categorie: 4,\n    categorie_name: \"Juegos\",\n  },\n  {\n    id_categorie: 5,\n    categorie_name: \"Movil\",\n  },\n  {\n    id_categorie: 6,\n    categorie_name: \"Guias\",\n  },\n  {\n    id_categorie: 7,\n    categorie_name: \"Consolas\",\n  },\n  {\n    id_categorie: 8,\n    categorie_name: \"Reviews\",\n  }\n];\n\nexport default listSB;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport {userContext} from '../App'\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../App.css\"\nimport listSB from \"./NavBarList\";\n\nexport default function Navbar() {\n\n  const history = useHistory()\n  const {userState, setUserState} = useContext(userContext)\n  const [name, setName] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [buttonState, setButtonState] = useState(false)\n\n  useEffect(()=>{\n    const nameSession = sessionStorage.getItem(\"Name\");\n    const typeSession = JSON.parse(sessionStorage.getItem(\"Type\"))\n\n    if(nameSession === null && typeSession === null){\n      setUserState(false)\n    }else{\n      setUserState(true)\n      setName(JSON.parse(nameSession));\n      if(typeSession === 1) setIsAdmin(true)\n    }\n\n  },[userState])\n\n  const logOut = (e) => {\n    e.preventDefault();\n    sessionStorage.removeItem(\"Name\");\n    sessionStorage.removeItem(\"Type\")\n    sessionStorage.removeItem(\"Tokens\");\n    setUserState(false);\n    setIsAdmin(false);\n    history.push(\"/\")\n  };\n\n\n\n  return (\n    <div className=\"m-navbar\">\n        <div className=\"container-nav\">\n            <div className=\"container-title\">\n              <button \n                className=\"nav-button\" \n                onClick={()=>{setButtonState(!buttonState)}}/>\n              <Link className=\"nav-title\" to=\"/\">PELADOS</Link>\n            </div>\n            <ul className=\"nav-ul\" id={!buttonState ? \"\" : \"hidden\"}>  \n                {listSB.map(categorie=>{\n                  const {id_categorie, categorie_name} = categorie;\n                  return(\n                    <Link \n                      className=\"nav-categorie\" \n                      to={`/categorie-post/${id_categorie}`} \n                      key={id_categorie} \n                      onClick={()=>{setButtonState(false)}}>\n                        <li className=\"nav-li\">{categorie_name}</li>\n                    </Link>\n                  )\n                })}\n                {\n                  !userState ? (\n                    <><Link \n                      className=\"nav-categorie\" \n                      to=\"/login\" \n                      onClick={()=>{setButtonState(false)}}>\n                        <li className=\"nav-user\">Login</li>\n                    </Link>\n                    <Link \n                      className=\"nav-categorie\" \n                      to=\"/sign-in\" \n                      onClick={()=>{setButtonState(false)}}>\n                        <li className=\"nav-user\">Registrate</li>\n                    </Link></>\n                  ) : (\n                    <>\n                      <li className=\"nav-user\" onClick={logOut}>Logout</li>\n                      {isAdmin ? (\n                        <Link to={`/new-post`}>\n                          <li className=\"nav-user\">{name}</li>\n                        </Link>\n                      ): (\n                        <li className=\"nav-user\">{name}</li>\n                      )\n                      } \n                    </>\n                  )\n                }\n            </ul>\n        </div>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport React, {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Registro() {\n    \n    const history = useHistory();\n    const [user, setUser] = useState({\n        user_name:\"\",\n        user_email:\"\",\n        user_password:\"\",\n        user_nickname:\"\",\n        user_image:\"\",\n        user_passwordConf:\"\"\n    });\n\n    const [phName,setPhName] = useState(\"Nombre\")\n    const [phNick,setPhNick] = useState(\"Nickname\")\n    const [phEmail,setPhEmail] = useState(\"Email\")\n    const [phImage, setPhImage] = useState(\"Image (URL)\")\n    const [phPass,setPhPass] = useState(\"Contraseña\")\n    const [phPassConf,setPhPassCongf] = useState(\"Repetir Contraseña\")\n    const [nameStyle, setNameStyle] = useState(\"input-form\")\n    const [passStyle, setPassStyle] = useState(\"input-form\")\n    const [passConfStyle, setPassConfStyle] = useState(\"input-form\")\n    const [emailStyle, setEmailStyle] = useState(\"input-form\")\n    const [nickStyle, setNickStyle] = useState(\"input-form\")\n    const [imageStyle, setImageStyle] = useState(\"input-form\")\n\n    const handleSubmit = async(e)=>{\n        e.preventDefault();\n        if(user.user_name===\"\"){\n          setNameStyle(\"input-form invalid\")\n          setPhName(\"Complete el campo\")\n        }\n        if(user.user_email===\"\"){\n          setEmailStyle(\"input-form invalid\")\n          setPhEmail(\"Complete el campo\")\n        }\n        if(user.user_password===\"\"){\n          setPassStyle(\"input-form invalid\")\n          setPhPass(\"Complete el campo\")\n        }\n        if(user.user_nickname===\"\"){\n          setNickStyle(\"input-form invalid\")\n          setPhNick(\"Complete el campo\")\n        }\n        if(user.user_passwordConf===\"\"){\n          setPassConfStyle(\"input-form invalid\")\n          setPhPassCongf(\"Complete el campo\")\n        }\n        if(user.user_image===\"\"){\n          setImageStyle(\"input-form invalid\")\n          setPhImage(\"Complete el campo\")\n        }\n        else{\n          //console.log(user)\n          const result = await postUser(user)\n          alert(result.data)\n          history.push(\"/\")\n        }\n    }\n\n    const postUser = (data) =>{\n      const {user_name, user_email, user_password, user_nickname, user_image} = data\n      return axios({\n        method:'post',\n        url:'https://manuelfossa-nodejs.herokuapp.com/users/add-user',\n        data:{\n            user_name,\n            user_email,\n            user_password,\n            user_nickname,\n            user_image\n        }\n      })\n    }\n\n    const handlePassConfirm = (value) =>{\n      if(value===user.user_password) setPassConfStyle(\"input-form valid\")\n      if(value!==user.user_password && value!==\"\") setPassConfStyle(\"input-form invalid\")\n      if(value===\"\") {\n        setPassConfStyle(\"input-form\")\n        setPhPassCongf(\"Repetir Contraseña\")\n      }\n\n    }\n\n    const handleBlurEmail = async(email) =>{\n      //console.log(email)\n      if(email!==\"\"){\n      const res = await axios.get(\n        `https://manuelfossa-nodejs.herokuapp.com/users/email-validation/${email}`\n      )\n      //console.log(res.data)\n      if(res.data===\"\"){\n        setEmailStyle(\"input-form valid\")\n      }\n      else setEmailStyle(\"input-form invalid\")\n      }\n    }\n\n    const handleBlurNick = async(nick) =>{\n      //console.log(email)\n      if(nick!==\"\"){\n      const res = await axios.get(\n        `https://manuelfossa-nodejs.herokuapp.com/users/nick-validation/${nick}`\n      )\n      //console.log(res.data)\n      if(res.data===\"\"){\n        setNickStyle(\"input-form valid\")\n      }\n      else setNickStyle(\"input-form invalid\")\n      }\n    }\n\n    return (\n      <form className=\"container-register\" onSubmit={handleSubmit}>\n        <p className=\"title-form\">Registrate</p>\n        <input \n          type=\"text\" \n          className={nameStyle} \n          placeholder={phName}\n          value={user.user_name}\n          onChange={(e)=> setUser({...user, user_name: e.target.value})}\n          onFocus={()=>setNameStyle(\"input-form\")}\n        />\n        <input \n          type=\"text\" \n          className={nickStyle}\n          placeholder={phNick}\n          value={user.user_nickname}\n          onChange={(e)=> setUser({...user, user_nickname:e.target.value})}\n          onBlur={(e)=> handleBlurNick(e.target.value)}\n          onFocus={()=>setNickStyle(\"input-form\")}\n        />\n        <input \n          type=\"email\" \n          className={emailStyle} \n          placeholder={phEmail}\n          value={user.user_email}\n          onChange={(e)=> setUser({...user, user_email:e.target.value})}\n          onBlur={(e)=> handleBlurEmail(e.target.value)}\n          onFocus={()=>setEmailStyle(\"input-form\")}\n        />\n        <input\n          type=\"text\"\n          className={imageStyle}\n          placeholder={phImage}\n          value={user.user_image}\n          onChange={(e)=> setUser({...user, user_image:e.target.value})}\n          onFocus={()=>setImageStyle(\"input-form\")}\n        />\n        <input \n          type=\"password\" \n          className={passStyle}\n          placeholder={phPass}\n          value={user.user_password}\n          onChange={(e)=> setUser({...user, user_password:e.target.value})}\n          onFocus={()=>setPassStyle(\"input-form\")}\n        />\n        <input \n          type=\"password\" \n          className={passConfStyle}\n          placeholder={phPassConf}\n          value={user.user_passwordConf}\n          onChange={(e)=>{setUser(({...user,user_passwordConf:e.target.value}),handlePassConfirm(e.target.value))}} \n        />\n        <button type=\"submit\" className=\"btn-form\">Registrarse</button>\n      </form>\n    )\n}\n\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n\nexport default function CategorieSelect(props) {\n\n    const [categories, setCategories] = useState([])\n    const [categorie, setCategorie] = useState(\"\")\n\n\n    const getCategories =()=>{\n        return axios.get(\"https://manuelfossa-nodejs.herokuapp.com/categories/get-categories\")\n    }\n\n    useEffect(()=>{\n        const result=getCategories()\n        result.then(res=>{\n            setCategories(res.data.data)\n        })\n    },[])\n\n    useEffect(()=>{\n        props.selectCateg(categorie)\n    },[categorie])\n\n    return (\n        <select className=\"categorie-select\" onChange={(e)=>{\n            setCategorie(e.target.value)}}>\n            {categories.map((categorie)=>{\n                return(\n                    <option key={categorie.id_categorie} value={categorie.id_categorie}>{categorie.categorie}</option>\n                )\n            })}\n        </select>\n    )\n}\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport CategorieSelect from \"./CategorieSelect\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nexport default function Posts() \n{\n  const history = useHistory()\n  const [post, setPost] = useState({\n    postDesc: \"\",\n    postTitle: \"\",\n    postSubtitle: \"\",\n    postImage: \"\",\n    postCateg: 1,\n  });\n\n\n  const [alertState, setAlertState] = useState(true)\n\n  const categorieSelect = (categorie) => {\n    setPost({ ...post, postCateg: categorie });\n  };\n\n  const handleEditor = (e, editor) => {\n    const data = editor.getData();\n    setPost({ ...post, postDesc: data });\n  };\n\n  const createPost = (data) => {\n    const { post_title, post_image, post_desc, post_categ, post_subtitle } = data.postSended;\n    return axios.post(\n      \"https://manuelfossa-nodejs.herokuapp.com/posts/add-post\",\n      {\n        post_desc,\n        post_title,\n        post_subtitle,\n        post_image,\n        post_categ,\n      },\n      {\n        headers: { Authorization: \"Bearer \" + data.token },\n      }\n    );\n\n    //console.log(data.token)\n  };\n\n  const TokenFunction = (tokenR) => {\n    return axios.post(\"https://manuelfossa-nodejs.herokuapp.com/jwt/token\", { token: tokenR });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if(post.postTitle===\"\" || post.postSubtitle===\"\" || post.postImage===\"\" || post.postDesc===\"\"){\n      setAlertState(false)\n    }\n    else{\n      const tokens = sessionStorage.getItem(\"Tokens\");\n      const parsedTokens = JSON.parse(tokens);\n      //console.log(parsedTokens.tokenR);\n      const data = {\n        postSended: {\n          post_desc: post.postDesc,\n          post_title: post.postTitle,\n          post_subtitle: post.postSubtitle,\n          post_image: post.postImage,\n          post_categ: post.postCateg,\n        },\n        token: parsedTokens.tokenA,\n      };\n\n      if (sessionStorage.getItem(\"Tokens\") === null) {\n        //console.log(\"Inicie Sesion\");\n      } else {\n        const result = await createPost(data);\n        //console.log(result);\n        if (result.data.message === \"jwt expired\") {\n          const newToken = await TokenFunction(parsedTokens.tokenR);\n          //console.log(newToken.data.tokenA);\n          data.token = newToken.data.tokenA;\n          const newResult = await createPost(data);\n          //console.log(newResult);\n          \n        } else {\n          //console.log(\"Token Activo\");\n        }\n      }\n    }\n  };\n\n  /* useEffect(()=>{\n    if(sessionStorage.getItem(\"Tokens\") === null) history.push(\"/\")\n  },[]); */\n\n  useEffect(() => {\n    if (post.postCateg === undefined) {\n      setPost({ ...post, postCateg: 1 });\n    }\n    console.log(post);\n  }, []);\n\n  return (\n    <>\n      <form className=\"container-create-post\" onSubmit={handleSubmit}>\n        {!alertState ? (\n          <div\n            className=\"alert-error\"\n          >Complete los campos\n          </div>\n        ) : null}\n        <input\n          type=\"text\"\n          className=\"input-form\"\n          placeholder=\"Titulo\"\n          value={post.postTitle}\n          onChange={(e) => setPost({ ...post, postTitle: e.target.value })}\n          onFocus={()=>setAlertState(true)}\n        />\n        <input\n          type=\"text\"\n          className=\"input-form\"\n          placeholder=\"Subtitulo\"\n          value={post.postSubtitle}\n          onChange={(e) => setPost({ ...post, postSubtitle: e.target.value })}\n          onFocus={()=>setAlertState(true)}\n        />\n        <input\n          type=\"text\"\n          className=\"input-form\"\n          placeholder=\"Imagen\"\n          value={post.postImage}\n          onChange={(e) => setPost({ ...post, postImage: e.target.value })}\n          onFocus={()=>setAlertState(true)}\n        />\n        <CategorieSelect selectCateg={categorieSelect}></CategorieSelect>\n        <CKEditor\n          className=\"txt-editor\"\n          editor={ClassicEditor}\n          onChange={handleEditor}\n          config={{\n            toolbar: [\n              \"bold\",\n              \"italic\",\n              \"underline\",\n              \"link\",\n              \"undo\",\n              \"redo\",\n              \"numberedList\",\n              \"bulletedList\",\n              \"blockQuote\"\n            ],\n          }}\n          onFocus={()=>setAlertState(true)}\n        ></CKEditor>\n        <button type=\"submit\" className=\"btn-form\">Crear Post</button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Post(props) {\n\n  const {post_image, id_post, post_title, post_subtitle} = props.post;\n    \n  return (\n    <div className=\"col-card\">\n      <Link className=\"link\" to={`/post/${id_post}`}>\n        <img className=\"img-card\" alt=\"...\" src={post_image}/>\n      </Link>\n      <Link className=\"link\" to={`/post/${id_post}`}>  \n        <h3 className=\"title-card\">{post_title}</h3>\n      </Link>\n      <p className=\"subtitle-card\">{`${post_subtitle.substring(0, 70)}...`}</p>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Post from \"./Post\";\n\nexport default function PostsList() {\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = () => {\n    return axios.get(\"https://manuelfossa-nodejs.herokuapp.com/posts/all-posts\");\n  };\n\n  useEffect(() => {\n    //console.log(\"Funcionando\");\n    const allPosts = getPosts();\n    allPosts.then((res) => {\n      setPosts(res.data.result);\n    });\n  }, []);\n\n  //console.log(posts)\n\n  return (\n    <div className=\"container-card\">\n      <div className=\"row-card\">\n          {posts.map((post) => {\n          return (\n              <Post key={post.id_post} post={post}></Post> \n          );\n        })}\n      </div>\n    </div>\n      \n  );\n}\n","import React,{useEffect, useState} from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport \"../App.css\"\n\nexport default function ComentsList({id}) {\n\n    const[comments, setComments]=useState([])\n\n    useEffect(()=>{\n        const res = axios(`https://manuelfossa-nodejs.herokuapp.com/comments/${id}`)\n        res.then(result=>{\n            setComments(result.data.result)\n        })\n    }, [])\n\n    return (\n        <>\n            {comments.map(eachComment=>{\n                const {id_comment, user_nickname, comment_date, comment, user_image} = eachComment\n                return(\n                    <div className=\"comment-container\" key={id_comment}>\n                        <div className=\"comment-user-box\">\n                            <img className=\"comment-user-img\" alt=\"...\" src={user_image ? user_image : \"https://images.assetsdelivery.com/thumbnails/thesomeday123/thesomeday1231709/thesomeday123170900021.jpg\"}/>\n                            <p className=\"comment-user-name\">{user_nickname}</p>\n                            <p className=\"comment-date\">{moment(comment_date).format('l')}</p>\n                        </div>\n                        <p className=\"comment-content\">{comment}</p>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n","import React, {useState, useContext} from \"react\";\nimport axios from 'axios';\nimport {userContext} from '../App'\n\nexport default function AddComent({id}) {\n\n\n    const {userState} = useContext(userContext)\n    const [comment, setComment] = useState(\"\");\n\n    const sendComment = (token) =>{\n      return axios.post(\"https://manuelfossa-nodejs.herokuapp.com/comments/add-comment\",\n      {\n        id_post: id,\n        comment: comment\n      },\n      {\n        headers: {authorization: \"Bearer \" + token}\n      }\n      )\n    }\n\n    const refreshTokenFunction = (tokenR) => {\n      return axios.post(\"https://manuelfossa-nodejs.herokuapp.com/jwt/token\", { token: tokenR });\n    };\n\n    const commentSubmit = async (e)=>{\n      e.preventDefault()\n      const tokens = sessionStorage.getItem(\"Tokens\");\n      const parsedTokens = JSON.parse(tokens);\n      if(!userState){\n        //console.log(\"Inicie Sesion para comentar\")\n      } \n      if(comment!==\"\"){\n        const result = await sendComment(parsedTokens.tokenA)\n        if(result.data.message === \"jwt expired\"){\n          const newToken = await refreshTokenFunction(parsedTokens.tokenR);\n          const newResult = await sendComment(newToken.data.tokenA)\n          //console.log(newResult)\n        }    \n      }else{\n        //console.log(\"Completar el campo\")\n      }  \n      window.location.reload();\n      setComment(\"\")\n    }\n\n  return (\n    <form onSubmit={commentSubmit}>\n      <textarea \n        className=\"comment-txt\" \n        placeholder={userState ? (\"Comenta!\") : (\"Iniciar Sesion para Comentar\")}\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n        ></textarea>\n        <button type=\"submit\" className=\"comment-btn\" disabled={!userState}>Comentar</button>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport ComentsList from \"../comments/ComentsList\";\nimport AddComent from \"../comments/AddComent\";\nimport moment from \"moment\";\nimport htmlParser from 'html-react-parser'\nimport \"../App.css\";\n\nexport default function SelectedPost() {\n\n  const { id } = useParams();\n  const [post, setPost] = useState({});\n  const {\n    post_title,\n    post_subtitle,\n    post_desc,\n    post_image,\n    post_date,\n    user_nickname,\n    categorie,\n    id_categorie\n  } = post;\n\n  const ReturnPost = (id) => {\n    return axios.get(`https://manuelfossa-nodejs.herokuapp.com/posts/post/${id}`);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const result = ReturnPost(id);\n    result.then((res) => {\n      setPost(res.data.result);\n    });\n  }, []);\n\n  return (\n    <div className=\"container-post\">\n      <Link to={`/categorie-post/${id_categorie}`}>\n        <p className=\"categorie-post\">{categorie}</p>\n      </Link>\n      <h1 className=\"title-post\">\n        {post_title}\n      </h1>\n      <div className=\"data-post-container\">\n        <p className=\"data-post\">{user_nickname}</p>\n        <p className=\"data-post\">{moment(post_date).format(\"l\")}</p>\n      </div>\n      <h3 className=\"subtitle-post\">{post_subtitle}</h3>\n      <img\n        src={post_image}\n        alt=\"...\"\n        className=\"img-post\"\n      />\n      <div className=\"content-post\">{htmlParser(`${post_desc}`)}</div>\n      <hr></hr>\n        <h2 className=\"comments-title\">Comentarios</h2>\n        <div className=\"comment-list\">\n          <AddComent id={id}></AddComent> \n          <ComentsList id={id}></ComentsList>       \n        </div>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\n\nexport default function CategoriePostList() {\n  const { id } = useParams();\n  const [posts, setPosts] = useState([]);\n\n  const traerPostCat = () => {\n    return axios.get(`https://manuelfossa-nodejs.herokuapp.com/categories/categorie-post/${id}`);\n  };\n\n  useEffect(() => {\n    const listaPosts = traerPostCat();\n    listaPosts.then((result) => {\n      const res = result.data.data;\n      setPosts(res);\n    });\n  }, [id]);\n\n  return (\n    <div className=\"container-card\">\n      <div className=\"row-card\">\n      {posts.map((post) => {\n        return <Post key={post.id_post} post={post}></Post>;\n      })}\n      </div>\n    </div>\n  );\n}\n\n","import \"./App.css\";\nimport Login from \"./users/Login\";\nimport Navbar from \"./navbar/Navbar\";\nimport Registro from \"./users/Registro\";\nimport CreatePosts from \"./posts/CreatePosts\";\nimport PostsList from \"./posts/PostsList\";\nimport SelectedPost from \"./posts/SelectedPost\";\nimport CategoriePostList from './posts/CategoriePostList'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { createContext, useState } from 'react';\n\nexport const userContext = createContext(null)\n\n\nfunction App() {\n\n  const [userState, setUserState] = useState(null)\n\n  return (\n    <userContext.Provider value={{userState, setUserState}}>\n    <Router basename=\"/react-project\">\n          <Navbar></Navbar>\n          <Switch>\n            <Route path=\"/post/:id\">\n              <SelectedPost></SelectedPost>\n            </Route>\n            <Route exact path=\"/\">\n              <PostsList></PostsList>\n            </Route>\n            <Route path=\"/sign-in\">\n              <Registro></Registro>\n            </Route>\n            <Route path=\"/login\">\n              <Login></Login>\n            </Route>\n            <Route path=\"/new-post\">\n              <CreatePosts></CreatePosts>\n            </Route>\n            <Route path=\"/categorie-post/:id\">\n              <CategoriePostList></CategoriePostList>\n            </Route>\n          </Switch>\n    </Router>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}